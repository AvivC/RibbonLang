import graphics

graphics.init(graphics.SDL_INIT_VIDEO)

window = graphics.create_window("My window!", graphics.SDL_WINDOWPOS_UNDEFINED, graphics.SDL_WINDOWPOS_UNDEFINED, 500, 350, 0)

print("Window:")
print(window)

graphics.set_hint(graphics.SDL_HINT_RENDER_SCALE_QUALITY, "linear")

renderer = graphics.create_renderer(window, -1, graphics.SDL_RENDERER_ACCELERATED)

print("Renderer:")
print(renderer)

graphics.img_init(graphics.IMG_INIT_PNG)

graphics.show_cursor(0)

graphics.log_message(graphics.SDL_LOG_CATEGORY_APPLICATION, graphics.SDL_LOG_PRIORITY_INFO, "Some logging :D :D")

texture = graphics.img_load_texture(renderer, "others\player.png")  # relative to CWD

print("Texture:")
print(texture)

texture_details = []
query_result = graphics.query_texture(texture, texture_details)
print("Texture details:")
print(texture_details)
print("Query result:")
print(query_result)






print("")
print("")
print("")

import _testing

r = graphics.Rect(100, 200, 50, 50)
print("Rect:")
print(r)

_testing.get_value_directly_from_object_attributes(r, "x")
print(r.x)
_testing.get_value_directly_from_object_attributes(r, "y")
print(r.y)
_testing.get_value_directly_from_object_attributes(r, "w")
print(r.w)
_testing.get_value_directly_from_object_attributes(r, "h")
print(r.h)

r.y = 350
_testing.get_value_directly_from_object_attributes(r, "y")
print(r.y)

input()

graphics.destroy_renderer(renderer)

graphics.destroy_window(window)

graphics.quit()