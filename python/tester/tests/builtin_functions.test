test empty_print_prints_newline
    print("")
expect

end

test print_line
    print("Hello!")
expect
    Hello!
end

test print_multiple_lines
    print("Hello,")
    print("world!")
expect
    Hello,
    world!
end

test read_file
    print(read_file("some_file.txt"))
file some_file.txt
    this is
    some file text
expect
    this is
    some file text
end

test file io cycle
    print(file_exists("a1.txt")) # prints false

    write_file("a1.txt", "Haaands!")

    print(file_exists("a1.txt")) # prints true

    print(read_file("a1.txt")) # prints Haaands!

    print(file_exists("a1.txt")) # prints true

    delete_file("a1.txt")

    print(file_exists("a1.txt"))
expect
    false
    true
    Haaands!
    true
    false
end

test has_attribute function
    C = class {
        @init = {
            self.x = 10
        }
    }

    c = C()
    s = "hello"

    print(has_attribute(c, "x"))
    print(has_attribute(c, "y"))

    print(has_attribute(s, "x"))
    print(has_attribute(s, "length"))
expect
    true
    false
    false
    true
end

test is_instance function
    import math

    s = "abc"
    t = []
    f = {}

    C = class {
        m = {}
    }

    o = C()

    m = o.m

    print(is_instance(math, "Module"))

    print(is_instance(s, "String"))
    print(is_instance(s, "Table"))

    print(is_instance(t, "String"))
    print(is_instance(t, "Table"))

    print(is_instance(f, "Function"))
    print(is_instance(f, ""))

    print(is_instance(C, "Class"))
    print(is_instance(C, "C"))

    print(is_instance(o, "C"))
    print(is_instance(o, "Instance"))
    print(is_instance(o, "Class"))

    print(is_instance(m, "BoundMethod"))
    print(is_instance(m, "Function"))

    print(is_instance(2, "Number"))
    print(is_instance(2, "Boolean"))

    print(is_instance(true, "Boolean"))
    print(is_instance(true, "Number"))

    print(is_instance(nil, "Nil"))
expect
    true
    true
    false
    false
    true
    true
    false
    true
    false
    true
    false
    false
    true
    false
    true
    false
    true
    false
    true
end

test type function
    import math

    s = "abc"
    t = []
    f = {}

    Thing = class {
        m = {}
    }

    o = Thing()

    m = o.m

    print(type(math))
    print(type(s))
    print(type(t))
    print(type(f))
    print(type(Thing))
    print(type(o))
    print(type(m))
    print(type(100))
    print(type(false))
    print(type(nil))
expect
    Module
    String
    Table
    Function
    Class
    Thing
    BoundMethod
    Number
    Boolean
    Nil
end