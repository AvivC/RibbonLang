test empty_function_does_nothing
    {}
    {}()
expect
end

test function_with_no_return_returns_nil
    print({}())
    f = {

    }
    print(f())
expect
    nil
    nil
end

test function_calls
    f1 = { takes x to
        print("f1")
        return x * 10
    }
    f2 = { takes x to
        print("f2")
        return f1(x) * 10
    }
    f3 = { takes x to
        print("f3")
        return f2(x) * 10
    }
    print(f3(8))
expect
    f3
    f2
    f1
    8000
end

test fuction_calls_multi_arg
    divide = {takes x, y to
        print("In function divide")
        return x / y
    }
    print(divide(20, 5))
expect
    In function divide
    4
end

test function_as_argument
    f1 = {takes f2 to
        return f2(50)
    }

    q = { takes n to
        return n * n
    }

    print(f1(q))
expect
    2500
end

test function_call_in_expression
    f = { takes x, y to
        print("In f")
        return x + y
    }
    print(5 + 8 * f(10, f(5, 15)) - 1)
expect
    In f
    In f
    244
end

test function instances are independent objects
    func_creator = {
        return { takes x to
            print("I received " + x)
        }
    }

    f1 = func_creator()
    f2 = func_creator()

    print(f1 == f1)
    print(f1 == f2)

    f1.attr = "Thing1"
    f2.attr = "Thing2"

    print(f1.attr)
    print(f2.attr)

    f1(10)
    #f2(20)
    #f1(10)
expect
    true
    false
    Thing1
    Thing2
    I received 10
end