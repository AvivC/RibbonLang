repeat test surface memory corruptions by validating consistent stdout output
    # By specifying "repeat" on the test, it will not run once, but hundreds of times.
    # Trying to help inconsistent undefined behavior etc surface.

    print("Some text")

    i = 1
    while i <= 12 {
        print("More text: " + to_string(i))
        i = i + 1
    }
expect
    Some text
    More text: 1
    More text: 2
    More text: 3
    More text: 4
    More text: 5
    More text: 6
    More text: 7
    More text: 8
    More text: 9
    More text: 10
    More text: 11
    More text: 12
end

test string concat does not overflow stack
    # We had a bug where string concating would fail to pop the original
    # string, resulting in an overflow in long loops. This test makes sure that bug doesn't come back

    i = 0
    while i < 2500 {
        "s1" + "s2"
        i = i + 1
    }
    print("Success")
expect
    Success
end

test table access does not overflow stack
    t = ["a": 1]

    i = 0
    while i < 2500 {
	    t["a"]
        i = i + 1
    }

    print("Success")
expect
    Success
end
