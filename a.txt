Running tests in builtin_functions.test

Test empty_print_prints_newline                                                   SUCCESS
Test print_line                                                                   SUCCESS
Test print_multiple_lines                                                         SUCCESS
Test read_file                                                                    SUCCESS
Test file io cycle                                                                SUCCESS

Running tests in classes.test

Test empty named class                                                            SUCCESS
Test empty anonymous class                                                        SUCCESS
Test class attributes                                                             SUCCESS
Test constructors                                                                 SUCCESS
Test more constructors                                                            SUCCESS
Test tribe of proud happy kangaroos living together in peace and harmony jumpin aroundSUCCESS
Test self is captured by closures in methods                                      SUCCESS
Test more funky classes stuff                                                     SUCCESS

Running tests in control_flow.test

Test plain_if                                                                     SUCCESS
Test if_else                                                                      SUCCESS
Test if_elsif_else                                                                SUCCESS
Test nested_if_elsif_else                                                         SUCCESS
Test more if elsif else                                                           SUCCESS
Test counting_while_loop                                                          SUCCESS
Test while_inside_if                                                              SUCCESS
Test if_inside_while                                                              SUCCESS

Running tests in functions.test

Test empty_function_does_nothing                                                  SUCCESS
Test function_with_no_return_returns_nil                                          SUCCESS
Test recursion                                                                    SUCCESS
Test function_calls                                                               SUCCESS
Test fuction_calls_multi_arg                                                      SUCCESS
Test function_as_argument                                                         SUCCESS
Test function_call_in_expression                                                  SUCCESS
Test function instances are independent objects                                   SUCCESS
Test basic closures                                                               SUCCESS
Test deeply nested closures                                                       SUCCESS
Test deeply nested closures with different names                                  SUCCESS
Test higher order closures                                                        SUCCESS
Test closure semantics                                                            SUCCESS
Test closure with arguments                                                       SUCCESS
Test function reaches to base function                                            SUCCESS
Test weird closure behavior                                                       SUCCESS
Test closure cannot alter enclosed variable                                       SUCCESS
Test nested closure cannot alter enclosed variable                                SUCCESS
Test free variable referenced before assignment returns nil                       SUCCESS

Running tests in math.test

Test binary_operations                                                            SUCCESS
Test expression                                                                   SUCCESS
Test boolean expressions                                                          SUCCESS

Running tests in misc.test

Test surface memory corruptions by validating consistent stdout output            SUCCESS
Test string concat does not overflow stack                                        SUCCESS
Test table access does not overflow stack                                         SUCCESS

Running tests in modules.test

Test basic import                                                                 SUCCESS
Test nested imports                                                               SUCCESS
Test module caching                                                               SUCCESS
Test module attributes                                                            SUCCESS
Test import stdlib module                                                         SUCCESS
Test user module takes precedence over stdlib module                              SUCCESS
Test unfound module raises error                                                  SUCCESS
Test load stdlib extension module                                                 SUCCESS
Test load user extension module                                                   SUCCESS
Test extension classes                                                            SUCCESS
Test extension imports and uses other extension                                   SUCCESS
Test extension causes the import of another extension                             SUCCESS
Test more extension communication and also importing plane module from extension  SUCCESS

Running tests in native_integ.test

Test native function calls user function                                          SUCCESS
Test native function calls user function with arguments and return value          SUCCESS
Test native function calls user function that fails                               SUCCESS
Test user code calls native code calls user code calls native code                SUCCESS
Test with nested closures                                                         SUCCESS
Test cross module                                                                 SUCCESS
Test descriptors                                                                  SUCCESS

Running tests in objects.test

Test attribute assignment                                                         SUCCESS
Test objects of the same type are independent                                     SUCCESS

Running tests in strings.test

Test adding strings                                                               SUCCESS
Test illegal to set attribute on string                                           SUCCESS
Test string length method                                                         SUCCESS
Test string interning                                                             SUCCESS
Test advanced string interning                                                    SUCCESS
Test string key accessor                                                          SUCCESS
Test string operations                                                            SUCCESS

Running tests in table.test

Test empty table                                                                  SUCCESS
Test table operations                                                             SUCCESS
Test nested tables                                                                SUCCESS
Test initializing with keys of different types                                    SUCCESS
Test setting keys of different types                                              SUCCESS
Test table as plain array                                                         SUCCESS
Test table as mixed array and dictionary                                          SUCCESS
Test large table                                                                  SUCCESS
Test big ass table internals                                                      FAILURE

Ln. Expected        | Actual

0                   |                
1   Adding key a to table. | Adding key a to table.
2   Table:          | Table:         
3   [a: 10]         | [a: 10]        
4   Details:        | Details:       
5   [collision_count: 0, capacity: 8, num_entries: 1, count: 1] | [collision_count: 0, capacity: 8, num_entries: 1, count: 1]
6                   |                
7                   |                
8   Adding key b to table. | Adding key b to table.
9   Table:          | Table:         
10  [a: 10, b: 20]  | [a: 10, b: 20] 
11  Details:        | Details:       
12  [collision_count: 0, capacity: 8, num_entries: 2, count: 2] | [collision_count: 0, capacity: 8, num_entries: 2, count: 2]
13                  |                
14                  |                
15  Adding key c to table. | Adding key c to table.
16  Table:          | Table:         
17  [c: 30, a: 10, b: 20] | [c: 30, a: 10, b: 20]
18  Details:        | Details:       
19  [collision_count: 0, capacity: 8, num_entries: 3, count: 3] | [collision_count: 0, capacity: 8, num_entries: 3, count: 3]
20                  |                
21                  |                
22  Adding key d to table. | Adding key d to table.
23  Table:          | Table:         
24  [c: 30, d: 40, a: 10, b: 20] | [c: 30, d: 40, a: 10, b: 20]
25  Details:        | Details:       
26  [collision_count: 0, capacity: 8, num_entries: 4, count: 4] | [collision_count: 0, capacity: 8, num_entries: 4, count: 4]
27                  |                
28                  |                
29  Adding key e to table. | Adding key e to table.
30  Table:          | Table:         
31  [c: 30, d: 40, e: 50, a: 10, b: 20] | [c: 30, d: 40, e: 50, a: 10, b: 20]
32  Details:        | Details:       
33  [collision_count: 0, capacity: 8, num_entries: 5, count: 5] | [collision_count: 0, capacity: 8, num_entries: 5, count: 5]
34                  |                
35                  |                
36  Adding key f to table. | Adding key f to table.
37  Table:          | Table:         
38  [a: 10, b: 20, c: 30, d: 40, e: 50, f: 60] | [a: 10, b: 20, c: 30, d: 40, e: 50, f: 60]
39  Details:        | Details:       
40  [collision_count: 0, capacity: 16, num_entries: 6, count: 6] | [collision_count: 0, capacity: 16, num_entries: 6, count: 6]
41                  |                
42                  |                
43  Adding key g to table. | Adding key g to table.
44  Table:          | Table:         
45  [a: 10, b: 20, c: 30, d: 40, e: 50, f: 60, g: 70] | [a: 10, b: 20, c: 30, d: 40, e: 50, f: 60, g: 70]
46  Details:        | Details:       
47  [collision_count: 0, capacity: 16, num_entries: 7, count: 7] | [collision_count: 0, capacity: 16, num_entries: 7, count: 7]
48                  |                
49                  |                
50  Adding key h to table. | Adding key h to table.
51  Table:          | Table:         
52  [a: 10, b: 20, c: 30, d: 40, e: 50, f: 60, g: 70, h: 80] | [a: 10, b: 20, c: 30, d: 40, e: 50, f: 60, g: 70, h: 80]
53  Details:        | Details:       
54  [collision_count: 0, capacity: 16, num_entries: 8, count: 8] | [collision_count: 0, capacity: 16, num_entries: 8, count: 8]
55                  |                
56                  |                
57  Removing entry e from table. | Removing entry e from table.
58  Table:          | Table:         
59  [a: 10, b: 20, c: 30, d: 40, f: 60, g: 70, h: 80] | [a: 10, b: 20, c: 30, d: 40, f: 60, g: 70, h: 80]
60  Details:        | Details:       
61  [collision_count: 0, capacity: 16, num_entries: 7, count: 8] | [collision_count: 0, capacity: 16, num_entries: 7, count: 8]
62                  |                
63                  |                
64  Removing entry a from table. | Removing entry a from table.
65  Table:          | Table:         
66  [b: 20, c: 30, d: 40, f: 60, g: 70, h: 80] | [b: 20, c: 30, d: 40, f: 60, g: 70, h: 80]
67  Details:        | Details:       
68  [collision_count: 0, capacity: 16, num_entries: 6, count: 8] | [collision_count: 0, capacity: 16, num_entries: 6, count: 8]
69                  |                
70  nil             | nil            
71                  |                
72  Adding key i to table. | Adding key i to table.
73  Table:          | Table:         
74  [b: 20, c: 30, d: 40, f: 60, g: 70, h: 80, i: 80] | [b: 20, c: 30, d: 40, f: 60, g: 70, h: 80, i: 80]
75  Details:        | Details:       
76  [collision_count: 1, capacity: 16, num_entries: 7, count: 9] | [collision_count: 1, capacity: 16, num_entries: 7, count: 9]
77                  |                
78                  |                
79  Adding key j to table. | Adding key j to table.
80  Table:          | Table:         
81  [b: 20, c: 30, d: 40, f: 60, g: 70, h: 80, i: 80, j: 80] | [b: 20, c: 30, d: 40, f: 60, g: 70, h: 80, i: 80, j: 80]
82  Details:        | Details:       
83  [collision_count: 1, capacity: 16, num_entries: 8, count: 10] | [collision_count: 1, capacity: 16, num_entries: 8, count: 10]
84                  |                
85                  |                
86  Adding key k to table. | Adding key k to table.
87  Table:          | Table:         
88  [k: 80, b: 20, c: 30, d: 40, f: 60, g: 70, h: 80, i: 80, j: 80] | [k: 80, b: 20, c: 30, d: 40, f: 60, g: 70, h: 80, i: 80, j: 80]
89  Details:        | Details:       
90  [collision_count: 1, capacity: 16, num_entries: 9, count: 11] | [collision_count: 1, capacity: 16, num_entries: 9, count: 11]
91                  |                
92                  |                
93  Adding key l to table. | Adding key l to table.
94  Table:          | Table:         
95  [b: 20, c: 30, d: 40, f: 60, g: 70, h: 80, i: 80, j: 80, k: 80, l: 80] | [b: 20, c: 30, d: 40, f: 60, g: 70, h: 80, i: 80, j: 80, k: 80, l: 80]
96  Details:        | Details:       
97  [collision_count: 0, capacity: 32, num_entries: 10, count: 10] | [collision_count: 0, capacity: 32, num_entries: 10, count: 10]
98                  |                
99                  |                
100 Removing entry b from table. | Removing entry b from table.
101 Table:          | Table:         
102 [c: 30, d: 40, f: 60, g: 70, h: 80, i: 80, j: 80, k: 80, l: 80] | [c: 30, d: 40, f: 60, g: 70, h: 80, i: 80, j: 80, k: 80, l: 80]
103 Details:        | Details:       
104 [collision_count: 0, capacity: 32, num_entries: 9, count: 10] | [collision_count: 0, capacity: 32, num_entries: 9, count: 10]
105                 |                
106                 |                
107 Removing entry c from table. | Removing entry c from table.
108 Table:          | Table:         
109 [d: 40, f: 60, g: 70, h: 80, i: 80, j: 80, k: 80, l: 80] | [d: 40, f: 60, g: 70, h: 80, i: 80, j: 80, k: 80, l: 80]
110 Details:        | Details:       
111 [collision_count: 0, capacity: 32, num_entries: 8, count: 10] | [collision_count: 0, capacity: 32, num_entries: 8, count: 10]
112                 |                
113                 |                
114 Removing entry d from table. | Removing entry d from table.
115 Table:          | Table:         
116 [f: 60, g: 70, h: 80, i: 80, j: 80, k: 80, l: 80] | [f: 60, g: 70, h: 80, i: 80, j: 80, k: 80, l: 80]
117 Details:        | Details:       
118 [collision_count: 0, capacity: 32, num_entries: 7, count: 10] | [collision_count: 0, capacity: 32, num_entries: 7, count: 10]
119                 |                
120                 |                
121 Removing entry f from table. | Removing entry f from table.
122 Table:          | Table:         
123 [g: 70, h: 80, i: 80, j: 80, k: 80, l: 80] | [g: 70, h: 80, i: 80, j: 80, k: 80, l: 80]
124 Details:        | Details:       
125 [collision_count: 0, capacity: 32, num_entries: 6, count: 10] | [collision_count: 0, capacity: 32, num_entries: 6, count: 10]
126                 |                
127                 |                
128 Removing entry l from table. | Removing entry l from table.
129 Table:          | Table:         
130 [g: 70, h: 80, i: 80, j: 80, k: 80] | [g: 70, h: 80, i: 80, j: 80, k: 80]
131 Details:        | Details:       
132 [collision_count: 0, capacity: 32, num_entries: 5, count: 10] | [collision_count: 0, capacity: 32, num_entries: 5, count: 10]
133                 |                
134                 |                
135 Adding key 0 to table. | Adding key 0 to table.
136 Table:          | Table:         
137 [g: 70, h: 80, i: 80, j: 80, k: 80, 0: 22] | [g: 70, h: 80, i: 80, j: 80, k: 80, 0: 22]
138 Details:        | Details:       
139 [collision_count: 0, capacity: 32, num_entries: 6, count: 11] | [collision_count: 0, capacity: 32, num_entries: 6, count: 11]
140                 |                
141                 |                
142 Adding key 1 to table. | Adding key 1 to table.
143 Table:          | Table:         
144 [g: 70, h: 80, i: 80, j: 80, k: 80, 0: 22, 1: 22] | [g: 70, h: 80, i: 80, j: 80, k: 80, 0: 22, 1: 22]
145 Details:        | Details:       
146 [collision_count: 0, capacity: 32, num_entries: 7, count: 12] | [collision_count: 0, capacity: 32, num_entries: 7, count: 12]
147                 |                
148                 |                
149 Adding key 2 to table. | Adding key 2 to table.
150 Table:          | Table:         
151 [g: 70, h: 80, i: 80, j: 80, k: 80, 0: 22, 1: 22, 2: 22] | [g: 70, h: 80, i: 80, j: 80, k: 80, 0: 22, 1: 22, 2: 22]
152 Details:        | Details:       
153 [collision_count: 0, capacity: 32, num_entries: 8, count: 13] | [collision_count: 0, capacity: 32, num_entries: 8, count: 13]
154                 |                
155                 |                
156 Adding key 3 to table. | Adding key 3 to table.
157 Table:          | Table:         
158 [g: 70, h: 80, i: 80, j: 80, k: 80, 0: 22, 1: 22, 2: 22, 3: 22] | [g: 70, h: 80, i: 80, j: 80, k: 80, 0: 22, 1: 22, 2: 22, 3: 22]
159 Details:        | Details:       
160 [collision_count: 0, capacity: 32, num_entries: 9, count: 14] | [collision_count: 0, capacity: 32, num_entries: 9, count: 14]
161                 |                
162                 |                
163 Adding key 4 to table. | Adding key 4 to table.
164 Table:          | Table:         
165 [g: 70, h: 80, i: 80, j: 80, k: 80, 0: 22, 1: 22, 2: 22, 3: 22, 4: 22] | [g: 70, h: 80, i: 80, j: 80, k: 80, 0: 22, 1: 22, 2: 22, 3: 22, 4: 22]
166 Details:        | Details:       
167 [collision_count: 0, capacity: 32, num_entries: 10, count: 15] | [collision_count: 0, capacity: 32, num_entries: 10, count: 15]
168                 |                
169                 |                
170 Adding key 5 to table. | Adding key 5 to table.
171 Table:          | Table:         
172 [g: 70, h: 80, i: 80, j: 80, k: 80, 0: 22, 1: 22, 2: 22, 3: 22, 4: 22, 5: 22] | [g: 70, h: 80, i: 80, j: 80, k: 80, 0: 22, 1: 22, 2: 22, 3: 22, 4: 22, 5: 22]
173 Details:        | Details:       
174 [collision_count: 0, capacity: 32, num_entries: 11, count: 16] | [collision_count: 0, capacity: 32, num_entries: 11, count: 16]
175                 |                
176                 |                
177 Adding key 6 to table. | Adding key 6 to table.
178 Table:          | Table:         
179 [g: 70, h: 80, i: 80, j: 80, k: 80, 0: 22, 1: 22, 2: 22, 3: 22, 4: 22, 5: 22, 6: 22] | [g: 70, h: 80, i: 80, j: 80, k: 80, 0: 22, 1: 22, 2: 22, 3: 22, 4: 22, 5: 22, 6: 22]
180 Details:        | Details:       
181 [collision_count: 0, capacity: 32, num_entries: 12, count: 17] | [collision_count: 0, capacity: 32, num_entries: 12, count: 17]
182                 |                
183                 |                
184 Adding key 7 to table. | Adding key 7 to table.
185 Table:          | Table:         
186 [g: 70, h: 80, i: 80, j: 80, k: 80, 0: 22, 1: 22, 2: 22, 3: 22, 4: 22, 5: 22, 6: 22, 7: 22] | [g: 70, h: 80, i: 80, j: 80, k: 80, 0: 22, 1: 22, 2: 22, 3: 22, 4: 22, 5: 22, 6: 22, 7: 22]
187 Details:        | Details:       
188 [collision_count: 0, capacity: 32, num_entries: 13, count: 18] | [collision_count: 0, capacity: 32, num_entries: 13, count: 18]
189                 |                
190                 |                
191 Adding key 8 to table. | Adding key 8 to table.
192 Table:          | Table:         
193 [g: 70, h: 80, i: 80, j: 80, k: 80, 0: 22, 1: 22, 2: 22, 3: 22, 4: 22, 5: 22, 6: 22, 7: 22, 8: 22] | [g: 70, h: 80, i: 80, j: 80, k: 80, 0: 22, 1: 22, 2: 22, 3: 22, 4: 22, 5: 22, 6: 22, 7: 22, 8: 22]
194 Details:        | Details:       
195 [collision_count: 0, capacity: 32, num_entries: 14, count: 19] | [collision_count: 0, capacity: 32, num_entries: 14, count: 19]
196                 |                
197                 |                
198 Adding key 9 to table. | Adding key 9 to table.
199 Table:          | Table:         
200 [g: 70, h: 80, i: 80, j: 80, k: 80, 0: 22, 1: 22, 2: 22, 3: 22, 4: 22, 5: 22, 6: 22, 7: 22, 8: 22, 9: 22] | [g: 70, h: 80, i: 80, j: 80, k: 80, 0: 22, 1: 22, 2: 22, 3: 22, 4: 22, 5: 22, 6: 22, 7: 22, 8: 22, 9: 22]
201 Details:        | Details:       
202 [collision_count: 0, capacity: 32, num_entries: 15, count: 20] | [collision_count: 0, capacity: 32, num_entries: 15, count: 20]
203                 |                
204                 |                
205 Adding key 10 to table. | Adding key 10 to table.
206 Table:          | Table:         
207 [10: 22, g: 70, h: 80, i: 80, j: 80, k: 80, 0: 22, 1: 22, 2: 22, 3: 22, 4: 22, 5: 22, 6: 22, 7: 22, 8: 22, 9: 22] | [10: 22, g: 70, h: 80, i: 80, j: 80, k: 80, 0: 22, 1: 22, 2: 22, 3: 22, 4: 22, 5: 22, 6: 22, 7: 22, 8: 22, 9: 22]
208 Details:        | Details:       
209 [collision_count: 0, capacity: 32, num_entries: 16, count: 21] | [collision_count: 0, capacity: 32, num_entries: 16, count: 21]
210                 |                
211                 |                
212 Adding key 11 to table. | Adding key 11 to table.
213 Table:          | Table:         
214 [10: 22, 11: 22, g: 70, h: 80, i: 80, j: 80, k: 80, 0: 22, 1: 22, 2: 22, 3: 22, 4: 22, 5: 22, 6: 22, 7: 22, 8: 22, 9: 22] | [10: 22, 11: 22, g: 70, h: 80, i: 80, j: 80, k: 80, 0: 22, 1: 22, 2: 22, 3: 22, 4: 22, 5: 22, 6: 22, 7: 22, 8: 22, 9: 22]
215 Details:        | Details:       
216 [collision_count: 1, capacity: 32, num_entries: 17, count: 22] | [collision_count: 1, capacity: 32, num_entries: 17, count: 22]
217                 |                
218                 |                
219 Adding key 12 to table. | Adding key 12 to table.
220 Table:          | Table:         
221 [10: 22, 11: 22, 12: 22, g: 70, h: 80, i: 80, j: 80, k: 80, 0: 22, 1: 22, 2: 22, 3: 22, 4: 22, 5: 22, 6: 22, 7: 22, 8: 22, 9: 22] | [10: 22, 12: 22, 12: 22, g: 70, h: 80, i: 80, j: 80, k: 80, 0: 22, 1: 22, 2: 22, 3: 22, 4: 22, 5: 22, 6: 22, 7: 22, 8: 22, 9: 22][DIFF]
222 Details:        | Details:       
223 [collision_count: 2, capacity: 32, num_entries: 18, count: 23] | [collision_count: 2, capacity: 32, num_entries: 18, count: 23]
224                 |                
225                 |                
226 Adding key 13 to table. | Adding key 13 to table.
227 Table:          | Table:         
228 [10: 22, 11: 22, 12: 22, 13: 22, g: 70, h: 80, i: 80, j: 80, k: 80, 0: 22, 1: 22, 2: 22, 3: 22, 4: 22, 5: 22, 6: 22, 7: 22, 8: 22, 9: 22] | [10: 22, 13: 22, g: 70, h: 80, i: 80, j: 80, k: 80, 0: 22, 1: 22, 2: 22, 3: 22, 4: 22, 5: 22, 6: 22, 7: 22, 8: 22, 9: 22][DIFF]
229 Details:        | Details:       
230 [collision_count: 0, capacity: 64, num_entries: 19, count: 19] | [collision_count: 0, capacity: 64, num_entries: 17, count: 17][DIFF]
231                 |                
232                 |                
233 Adding key 14 to table. | Adding key 14 to table.
234 Table:          | Table:         
235 [10: 22, 11: 22, 12: 22, 13: 22, 14: 22, g: 70, h: 80, i: 80, j: 80, k: 80, 0: 22, 1: 22, 2: 22, 3: 22, 4: 22, 5: 22, 6: 22, 7: 22, 8: 22, 9: 22] | [10: 22, 13: 22, 14: 22, g: 70, h: 80, i: 80, j: 80, k: 80, 0: 22, 1: 22, 2: 22, 3: 22, 4: 22, 5: 22, 6: 22, 7: 22, 8: 22, 9: 22][DIFF]
236 Details:        | Details:       
237 [collision_count: 0, capacity: 64, num_entries: 20, count: 20] | [collision_count: 0, capacity: 64, num_entries: 18, count: 18][DIFF]
238                 |                
239 22              | 22             
240 nil             | nil            

Found total 84 tests.
Some tests failed!
